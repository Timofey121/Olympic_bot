# -*- coding: utf8 -*-
import logging

from aiogram import types
from aiogram.dispatcher import FSMContext

from data.config import ADMINS
from keyboards.default.buttons_menu import main_keyboard
from loader import dp
from states import Test
from utils.db_api.PostgreSQL import add_user_feedback, subscriber_exists


@dp.message_handler(text="üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", state=None)
async def feedback(message: types.Message):
    if int(list(await subscriber_exists(message.from_user.id))[0][-1]) != 1:
        await message.answer("–ü—Ä–∏–≤–µ—Ç –µ—â—ë —Ä–∞–∑, –º—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –í—ã —Ä–µ—à–∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤! –ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à –æ—Ç–∑—ã–≤.",
                             reply_markup=main_keyboard)
        await Test.Q_for_feedback.set()
    else:
        await message.answer(f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–´! –î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ @Timofey1566")


@dp.message_handler(state=Test.Q_for_feedback)
async def feedback_1(message: types.Message, state: FSMContext):
    if str(list(await subscriber_exists(message.from_user.id))[0][2]) != "–î–∞":
        answer = message.text
        name = message.from_user.id
        if message.from_user.username is not None:
            name = message.from_user.username
        await add_user_feedback(olympic_feedback=answer, telegram_id=name)
        await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤", reply_markup=main_keyboard)
        for admin in ADMINS:
            try:
                await dp.bot.send_message(admin,
                                          f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ –æ—Ç–∑—ã–≤–µ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤:\n"
                                          f"Full_name = {message.from_user.full_name}\n"
                                          f"is_bot = {'–ù–µ –±–æ—Ç!' if message.from_user.is_bot is False else '–ë–æ—Ç!'}\n"
                                          f"User_name = @{'–ù–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è' if message.from_user.username is None else message.from_user.username}\n"
                                          f"id = {message.from_user.id}\n"
                                          f"Language = {message.from_user.language_code}\n\n"
                                          f"–û—Ç–∑—ã–≤:\n"
                                          f"{answer}")
            except Exception as err:
                logging.exception(err)
        await state.finish()
